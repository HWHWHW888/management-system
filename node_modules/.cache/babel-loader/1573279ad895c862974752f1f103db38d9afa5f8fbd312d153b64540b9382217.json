{"ast":null,"code":"import _objectSpread from\"/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export const SUPPORTED_CURRENCIES=[{value:'PESO',label:'Philippine Peso (â‚±)',symbol:'â‚±'},{value:'HKD',label:'Hong Kong Dollar (HK$)',symbol:'HK$'},{value:'MYR',label:'Malaysian Ringgit (RM)',symbol:'RM'}];export const getCurrencySymbol=currency=>{const currencyInfo=SUPPORTED_CURRENCIES.find(c=>c.value===currency);return(currencyInfo===null||currencyInfo===void 0?void 0:currencyInfo.symbol)||'HK$';};export const convertAmount=function(amount){let fromCurrency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'HKD';let toCurrency=arguments.length>2?arguments[2]:undefined;let trip=arguments.length>3?arguments[3]:undefined;if(!amount||amount===0)return 0;if(fromCurrency===toCurrency)return amount;// All amounts are stored in the trip's base currency, so we need to convert to the viewing currency\nlet rate=1;// Get the trip's base currency (default to HKD if not set)\nconst baseCurrency=trip.currency||'HKD';// If viewing currency is different from base currency, apply conversion\nif(toCurrency!==baseCurrency){switch(toCurrency){case'PESO':rate=trip.exchange_rate_peso||1;break;case'HKD':rate=trip.exchange_rate_hkd||1;break;case'MYR':rate=trip.exchange_rate_myr||1;break;default:rate=1;}}return amount*rate;};export const formatCurrency=function(amount){let currency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'HKD';let trip=arguments.length>2?arguments[2]:undefined;if(!amount&&amount!==0)return getCurrencySymbol(currency)+'0.00';const symbol=getCurrencySymbol(currency);const baseCurrency=(trip===null||trip===void 0?void 0:trip.currency)||'HKD';const convertedAmount=trip?convertAmount(amount,baseCurrency,currency,trip):amount;// Debug logging\nif(trip&&currency!==baseCurrency){console.log('ðŸ’± Currency conversion:',{originalAmount:amount,fromCurrency:baseCurrency,toCurrency:currency,exchangeRate:currency==='MYR'?trip.exchange_rate_myr:currency==='PESO'?trip.exchange_rate_peso:trip.exchange_rate_hkd,convertedAmount:convertedAmount,formattedResult:\"\".concat(symbol).concat(Math.abs(convertedAmount).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}))});}return\"\".concat(symbol).concat(Math.abs(convertedAmount).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}));};export const formatCurrencyWithSign=function(amount){let currency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'HKD';let trip=arguments.length>2?arguments[2]:undefined;if(!amount&&amount!==0)return getCurrencySymbol(currency)+'0.00';const symbol=getCurrencySymbol(currency);const baseCurrency=(trip===null||trip===void 0?void 0:trip.currency)||'HKD';const convertedAmount=trip?convertAmount(amount,baseCurrency,currency,trip):amount;const sign=convertedAmount>=0?'':'-';return\"\".concat(sign).concat(symbol).concat(Math.abs(convertedAmount).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}));};export const getDefaultExchangeRates=()=>({peso:1.0000,hkd:1.0000,myr:1.0000});export const updateTripExchangeRates=(trip,currency,rates)=>{return _objectSpread(_objectSpread({},trip),{},{currency,exchange_rate_peso:rates.peso||trip.exchange_rate_peso||1.0000,exchange_rate_hkd:rates.hkd||trip.exchange_rate_hkd||1.0000,exchange_rate_myr:rates.myr||trip.exchange_rate_myr||1.0000});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}