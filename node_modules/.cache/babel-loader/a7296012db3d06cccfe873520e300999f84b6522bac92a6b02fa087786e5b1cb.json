{"ast":null,"code":"export class TokenManager {\n  constructor() {\n    this.token = null;\n    // Try to load token from localStorage on initialization\n    this.loadTokenFromStorage();\n  }\n  loadTokenFromStorage() {\n    try {\n      const storedUser = localStorage.getItem('casinoUser');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        this.token = userData.token || null;\n      }\n    } catch (error) {\n      console.warn('Failed to load token from localStorage:', error);\n    }\n  }\n  setToken(token) {\n    this.token = token;\n    // Also update localStorage\n    try {\n      const storedUser = localStorage.getItem('casinoUser');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        userData.token = token;\n        localStorage.setItem('casinoUser', JSON.stringify(userData));\n      }\n    } catch (error) {\n      console.warn('Failed to update token in localStorage:', error);\n    }\n  }\n  async getToken() {\n    if (!this.token) {\n      this.loadTokenFromStorage();\n    }\n    return this.token;\n  }\n  clearToken() {\n    this.token = null;\n    try {\n      localStorage.removeItem('casinoUser');\n    } catch (error) {\n      console.warn('Failed to clear token from localStorage:', error);\n    }\n  }\n  hasToken() {\n    return this.token !== null;\n  }\n}\n\n// Export a singleton instance\nexport const tokenManager = new TokenManager();","map":{"version":3,"names":["TokenManager","constructor","token","loadTokenFromStorage","storedUser","localStorage","getItem","userData","JSON","parse","error","console","warn","setToken","setItem","stringify","getToken","clearToken","removeItem","hasToken","tokenManager"],"sources":["/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/src/utils/api/tokenManager.ts"],"sourcesContent":["export class TokenManager {\n  private token: string | null = null;\n\n  constructor() {\n    // Try to load token from localStorage on initialization\n    this.loadTokenFromStorage();\n  }\n\n  private loadTokenFromStorage(): void {\n    try {\n      const storedUser = localStorage.getItem('casinoUser');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        this.token = userData.token || null;\n      }\n    } catch (error) {\n      console.warn('Failed to load token from localStorage:', error);\n    }\n  }\n\n  setToken(token: string): void {\n    this.token = token;\n    // Also update localStorage\n    try {\n      const storedUser = localStorage.getItem('casinoUser');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        userData.token = token;\n        localStorage.setItem('casinoUser', JSON.stringify(userData));\n      }\n    } catch (error) {\n      console.warn('Failed to update token in localStorage:', error);\n    }\n  }\n\n  async getToken(): Promise<string | null> {\n    if (!this.token) {\n      this.loadTokenFromStorage();\n    }\n    return this.token;\n  }\n\n  clearToken(): void {\n    this.token = null;\n    try {\n      localStorage.removeItem('casinoUser');\n    } catch (error) {\n      console.warn('Failed to clear token from localStorage:', error);\n    }\n  }\n\n  hasToken(): boolean {\n    return this.token !== null;\n  }\n}\n\n// Export a singleton instance\nexport const tokenManager = new TokenManager();\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,CAAC;EAGxBC,WAAWA,CAAA,EAAG;IAAA,KAFNC,KAAK,GAAkB,IAAI;IAGjC;IACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC7B;EAEQA,oBAAoBA,CAAA,EAAS;IACnC,IAAI;MACF,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACrD,IAAIF,UAAU,EAAE;QACd,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;QACvC,IAAI,CAACF,KAAK,GAAGK,QAAQ,CAACL,KAAK,IAAI,IAAI;MACrC;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,yCAAyC,EAAEF,KAAK,CAAC;IAChE;EACF;EAEAG,QAAQA,CAACX,KAAa,EAAQ;IAC5B,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB;IACA,IAAI;MACF,MAAME,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACrD,IAAIF,UAAU,EAAE;QACd,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;QACvCG,QAAQ,CAACL,KAAK,GAAGA,KAAK;QACtBG,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEN,IAAI,CAACO,SAAS,CAACR,QAAQ,CAAC,CAAC;MAC9D;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,yCAAyC,EAAEF,KAAK,CAAC;IAChE;EACF;EAEA,MAAMM,QAAQA,CAAA,EAA2B;IACvC,IAAI,CAAC,IAAI,CAACd,KAAK,EAAE;MACf,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC7B;IACA,OAAO,IAAI,CAACD,KAAK;EACnB;EAEAe,UAAUA,CAAA,EAAS;IACjB,IAAI,CAACf,KAAK,GAAG,IAAI;IACjB,IAAI;MACFG,YAAY,CAACa,UAAU,CAAC,YAAY,CAAC;IACvC,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,0CAA0C,EAAEF,KAAK,CAAC;IACjE;EACF;EAEAS,QAAQA,CAAA,EAAY;IAClB,OAAO,IAAI,CAACjB,KAAK,KAAK,IAAI;EAC5B;AACF;;AAEA;AACA,OAAO,MAAMkB,YAAY,GAAG,IAAIpB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}