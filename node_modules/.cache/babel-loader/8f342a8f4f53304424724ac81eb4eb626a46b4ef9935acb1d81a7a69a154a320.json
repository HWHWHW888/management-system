{"ast":null,"code":"\"use client\";\n\n// src/progress.tsx\nimport _objectSpread from \"/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"__scopeProgress\", \"value\", \"max\", \"getValueLabel\"],\n  _excluded2 = [\"__scopeProgress\"];\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef((props, forwardedRef) => {\n  const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel\n    } = props,\n    progressProps = _objectWithoutProperties(props, _excluded);\n  if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n    console.error(getInvalidMaxError(\"\".concat(maxProp), \"Progress\"));\n  }\n  const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n  if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n    console.error(getInvalidValueError(\"\".concat(valueProp), \"Progress\"));\n  }\n  const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n  const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n  return /* @__PURE__ */jsx(ProgressProvider, {\n    scope: __scopeProgress,\n    value,\n    max,\n    children: /* @__PURE__ */jsx(Primitive.div, _objectSpread(_objectSpread({\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": isNumber(value) ? value : void 0,\n      \"aria-valuetext\": valueLabel,\n      role: \"progressbar\",\n      \"data-state\": getProgressState(value, max),\n      \"data-value\": value !== null && value !== void 0 ? value : void 0,\n      \"data-max\": max\n    }, progressProps), {}, {\n      ref: forwardedRef\n    }))\n  });\n});\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef((props, forwardedRef) => {\n  var _context$value;\n  const {\n      __scopeProgress\n    } = props,\n    indicatorProps = _objectWithoutProperties(props, _excluded2);\n  const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n  return /* @__PURE__ */jsx(Primitive.div, _objectSpread(_objectSpread({\n    \"data-state\": getProgressState(context.value, context.max),\n    \"data-value\": (_context$value = context.value) !== null && _context$value !== void 0 ? _context$value : void 0,\n    \"data-max\": context.max\n  }, indicatorProps), {}, {\n    ref: forwardedRef\n  }));\n});\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return \"\".concat(Math.round(value / max * 100), \"%\");\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return \"Invalid prop `max` of value `\".concat(propValue, \"` supplied to `\").concat(componentName, \"`. Only numbers greater than 0 are valid max values. Defaulting to `\").concat(DEFAULT_MAX, \"`.\");\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return \"Invalid prop `value` of value `\".concat(propValue, \"` supplied to `\").concat(componentName, \"`. The `value` prop must be:\\n  - a positive number\\n  - less than the value passed to `max` (or \").concat(DEFAULT_MAX, \" if no `max` prop is set)\\n  - `null` or `undefined` if the progress is indeterminate.\\n\\nDefaulting to `null`.\");\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport { Indicator, Progress, ProgressIndicator, Root, createProgressScope };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}