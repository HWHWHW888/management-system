{"ast":null,"code":"var _TokenManager;// Centralized token management for authentication\nimport{supabase}from'../supabase/supabaseClients';export class TokenManager{constructor(){this.token=undefined;this.refreshPromise=null;this.initializeToken();}static getInstance(){if(!TokenManager.instance){TokenManager.instance=new TokenManager();}return TokenManager.instance;}async initializeToken(){await this.getToken();}async getToken(){console.log('🔍 TokenManager: Getting token...');// If we have a cached token, return it\nif(this.token){console.log('🔑 TokenManager: Returning cached token');return this.token;}// Check localStorage for different possible token storage formats\nconst storedUser=localStorage.getItem('casinoUser');console.log('🔍 TokenManager: localStorage data:',storedUser);if(storedUser){try{const userData=JSON.parse(storedUser);console.log('🔍 TokenManager: Parsed user data:',userData);console.log('🔍 TokenManager: userData keys:',Object.keys(userData));// Check for token in different possible fields\nconst possibleTokenFields=['token','access_token','jwt','authToken'];for(const field of possibleTokenFields){if(userData[field]){this.token=userData[field];console.log(\"\\uD83D\\uDD11 TokenManager: Found token in localStorage field '\".concat(field,\"':\"),userData[field].substring(0,20)+'...');return userData[field];}}console.log('❌ TokenManager: No token field found in localStorage data');console.log('❌ TokenManager: Available fields:',Object.keys(userData));}catch(error){console.error('Error parsing stored user data:',error);}}else{console.log('❌ TokenManager: No casinoUser in localStorage');}// Also check for direct token storage\nconst directToken=localStorage.getItem('token')||localStorage.getItem('authToken')||localStorage.getItem('jwt');if(directToken){this.token=directToken;console.log('🔑 TokenManager: Found direct token in localStorage');return directToken;}// Check Supabase session\nconst{data:{session}}=await supabase.auth.getSession();if(session!==null&&session!==void 0&&session.access_token){this.token=session.access_token;console.log('🔑 TokenManager: Found token in Supabase session');return session.access_token;}console.log('❌ TokenManager: No token found anywhere');return undefined;}setToken(token){this.token=token;console.log('🔑 TokenManager: Token set:',token?'YES':'NO');// Don't modify localStorage here - let DatabaseWrapper handle it\n// This prevents conflicts and ensures consistent data structure\nconsole.log('🔑 TokenManager: Token cached in memory');}clearToken(){this.token=undefined;console.log('🗑️ TokenManager: Token cleared');// Clear from localStorage\nconst savedUser=localStorage.getItem('casinoUser');if(savedUser){try{const user=JSON.parse(savedUser);delete user.token;localStorage.setItem('casinoUser',JSON.stringify(user));}catch(error){console.warn('TokenManager: Failed to clear token from localStorage');}}}isTokenValid(){return this.token!==undefined&&this.token!==null;}}// Export singleton instance\n_TokenManager=TokenManager;TokenManager.instance=void 0;export const tokenManager=TokenManager.getInstance();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}