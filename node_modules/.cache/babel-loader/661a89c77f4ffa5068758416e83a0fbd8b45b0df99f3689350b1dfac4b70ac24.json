{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/src/components/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { db } from '../utils/supabase/supabaseClients';\nimport { db as databaseWrapper } from '../utils/api/databaseWrapper';\nimport { AlertTriangle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LoginForm({\n  onLogin\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showTestCredentials, setShowTestCredentials] = useState(false);\n  const [debugMode, setDebugMode] = useState(false);\n  const [connectionTest, setConnectionTest] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      console.log('🔐 Starting login process...');\n      console.log('👤 Username:', username);\n      console.log('🔑 Password length:', password.length);\n\n      // First check if Supabase is healthy\n      console.log('🔍 Checking database health...');\n      const isHealthy = await db.isHealthy();\n      if (!isHealthy) {\n        throw new Error('Database connection failed. Please check your internet connection and try again.');\n      }\n      console.log('✅ Database health check passed, attempting login...');\n      const user = await databaseWrapper.login(username, password);\n      console.log('✅ Login successful for user:', user);\n      console.log('🔍 User object structure:', JSON.stringify(user, null, 2));\n      console.log('🔍 User role:', user === null || user === void 0 ? void 0 : user.role);\n      console.log('🔍 User token:', user !== null && user !== void 0 && user.token ? 'Present' : 'Missing');\n      onLogin(user);\n    } catch (error) {\n      var _error$message;\n      console.error('❌ Login error:', error);\n\n      // If login fails and it's admin credentials, try to initialize admin account\n      if (username === 'admin' && password === 'admin123' && (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('Invalid')) {\n        console.log('🔧 Login failed for admin, attempting to initialize admin account...');\n        try {\n          await db.initializeSampleDataIfNeeded();\n          console.log('✅ Admin account initialized, retrying login...');\n\n          // Retry login after initialization\n          const retryUser = await databaseWrapper.login(username, password);\n          console.log('✅ Retry login successful for user:', retryUser);\n          onLogin(retryUser);\n          return; // Exit early if retry succeeds\n        } catch (initError) {\n          console.error('❌ Failed to initialize admin account:', initError);\n          setError(`Login failed. Admin initialization error: ${initError.message}`);\n          return;\n        }\n      }\n      setError(error.message || 'Login failed');\n\n      // If login fails, run a connection test for debugging\n      if (debugMode) {\n        try {\n          const testResult = await db.testConnection();\n          setConnectionTest(testResult);\n        } catch (testError) {\n          console.error('Connection test failed:', testError);\n        }\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fillTestCredentials = role => {\n    switch (role) {\n      case 'admin':\n        setUsername('admin');\n        setPassword('admin123');\n        break;\n      case 'agent':\n        setUsername('agent1');\n        setPassword('agent123');\n        break;\n      case 'staff':\n        setUsername('staff1');\n        setPassword('staff123');\n        break;\n    }\n    setError('');\n  };\n  const testDatabaseConnection = async () => {\n    setIsLoading(true);\n    try {\n      const testResult = await db.testConnection();\n      setConnectionTest(testResult);\n      if (testResult.success) {\n        setError('');\n        console.log('✅ Database connection test successful');\n      } else {\n        setError(`Connection test failed: ${testResult.message}`);\n        console.error('❌ Database connection test failed:', testResult);\n      }\n    } catch (error) {\n      setError(`Connection test error: ${error.message}`);\n      console.error('❌ Connection test error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const initializeAdminAccount = async () => {\n    setIsLoading(true);\n    try {\n      console.log('🔧 Manually initializing admin account...');\n      await db.initializeSampleDataIfNeeded();\n      setError('');\n      alert('Admin account initialized successfully! Try logging in with admin/admin123');\n    } catch (error) {\n      setError(`Initialization failed: ${error.message}`);\n      console.error('❌ Admin initialization error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"text-2xl\",\n            children: \"Casino Management System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n            children: \"Sign in to access the management dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username\",\n                type: \"text\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                placeholder: \"Enter username\",\n                required: true,\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password\",\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                placeholder: \"Enter password\",\n                required: true,\n                disabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              className: \"border-red-200 bg-red-50\",\n              children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                className: \"w-4 h-4 text-red-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                className: \"text-red-800\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Login Failed:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), \" \", error, error.includes('Invalid credentials') && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-xs\",\n                  children: [\"Make sure you're using the correct credentials:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this), \"\\u2022 Admin: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"bg-red-100 px-1 rounded\",\n                    children: \"admin / admin123\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 40\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, this), \"\\u2022 Agent: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"bg-red-100 px-1 rounded\",\n                    children: \"agent1 / agent123\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 40\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this), \"\\u2022 Staff: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"bg-red-100 px-1 rounded\",\n                    children: \"staff1 / staff123\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"w-full\",\n              disabled: isLoading,\n              children: isLoading ? 'Signing In...' : 'Sign In'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"aIvsv+IPhBA63OR+wY5aLRD8D/I=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Button","Input","Label","Card","CardContent","CardDescription","CardHeader","CardTitle","Alert","AlertDescription","db","databaseWrapper","AlertTriangle","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","showTestCredentials","setShowTestCredentials","debugMode","setDebugMode","connectionTest","setConnectionTest","handleSubmit","e","preventDefault","console","log","length","isHealthy","Error","user","login","JSON","stringify","role","token","_error$message","message","includes","initializeSampleDataIfNeeded","retryUser","initError","testResult","testConnection","testError","fillTestCredentials","testDatabaseConnection","success","initializeAdminAccount","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/src/components/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { Badge } from './ui/badge';\nimport { User } from '../types';\nimport { db } from '../utils/supabase/supabaseClients';\nimport { db as databaseWrapper } from '../utils/api/databaseWrapper';\nimport { Database, Shield, Info, AlertTriangle, CheckCircle, Key, Users, RefreshCw, Bug, Crown, Diamond, TrendingUp, Lock } from 'lucide-react';\n\ninterface LoginFormProps {\n  onLogin: (user: User) => void;\n}\n\nexport function LoginForm({ onLogin }: LoginFormProps) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showTestCredentials, setShowTestCredentials] = useState(false);\n  const [debugMode, setDebugMode] = useState(false);\n  const [connectionTest, setConnectionTest] = useState<any>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      console.log('🔐 Starting login process...');\n      console.log('👤 Username:', username);\n      console.log('🔑 Password length:', password.length);\n      \n      // First check if Supabase is healthy\n      console.log('🔍 Checking database health...');\n      const isHealthy = await db.isHealthy();\n      if (!isHealthy) {\n        throw new Error('Database connection failed. Please check your internet connection and try again.');\n      }\n\n      console.log('✅ Database health check passed, attempting login...');\n      \n      const user = await databaseWrapper.login(username, password);\n      console.log('✅ Login successful for user:', user);\n      console.log('🔍 User object structure:', JSON.stringify(user, null, 2));\n      console.log('🔍 User role:', user?.role);\n      console.log('🔍 User token:', user?.token ? 'Present' : 'Missing');\n      onLogin(user);\n    } catch (error: any) {\n      console.error('❌ Login error:', error);\n      \n      // If login fails and it's admin credentials, try to initialize admin account\n      if (username === 'admin' && password === 'admin123' && error.message?.includes('Invalid')) {\n        console.log('🔧 Login failed for admin, attempting to initialize admin account...');\n        try {\n          await db.initializeSampleDataIfNeeded();\n          console.log('✅ Admin account initialized, retrying login...');\n          \n          // Retry login after initialization\n          const retryUser = await databaseWrapper.login(username, password);\n          console.log('✅ Retry login successful for user:', retryUser);\n          onLogin(retryUser);\n          return; // Exit early if retry succeeds\n        } catch (initError: any) {\n          console.error('❌ Failed to initialize admin account:', initError);\n          setError(`Login failed. Admin initialization error: ${initError.message}`);\n          return;\n        }\n      }\n      \n      setError(error.message || 'Login failed');\n      \n      // If login fails, run a connection test for debugging\n      if (debugMode) {\n        try {\n          const testResult = await db.testConnection();\n          setConnectionTest(testResult);\n        } catch (testError) {\n          console.error('Connection test failed:', testError);\n        }\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const fillTestCredentials = (role: string) => {\n    switch (role) {\n      case 'admin':\n        setUsername('admin');\n        setPassword('admin123');\n        break;\n      case 'agent':\n        setUsername('agent1');\n        setPassword('agent123');\n        break;\n      case 'staff':\n        setUsername('staff1');\n        setPassword('staff123');\n        break;\n    }\n    setError('');\n  };\n\n  const testDatabaseConnection = async () => {\n    setIsLoading(true);\n    try {\n      const testResult = await db.testConnection();\n      setConnectionTest(testResult);\n      \n      if (testResult.success) {\n        setError('');\n        console.log('✅ Database connection test successful');\n      } else {\n        setError(`Connection test failed: ${testResult.message}`);\n        console.error('❌ Database connection test failed:', testResult);\n      }\n    } catch (error: any) {\n      setError(`Connection test error: ${error.message}`);\n      console.error('❌ Connection test error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const initializeAdminAccount = async () => {\n    setIsLoading(true);\n    try {\n      console.log('🔧 Manually initializing admin account...');\n      await db.initializeSampleDataIfNeeded();\n      setError('');\n      alert('Admin account initialized successfully! Try logging in with admin/admin123');\n    } catch (error: any) {\n      setError(`Initialization failed: ${error.message}`);\n      console.error('❌ Admin initialization error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full\">\n        <Card>\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-2xl\">Casino Management System</CardTitle>\n            <CardDescription>\n              Sign in to access the management dashboard\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  id=\"username\"\n                  type=\"text\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  placeholder=\"Enter username\"\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n              \n              <div>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"Enter password\"\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n\n              {error && (\n                <Alert className=\"border-red-200 bg-red-50\">\n                  <AlertTriangle className=\"w-4 h-4 text-red-600\" />\n                  <AlertDescription className=\"text-red-800\">\n                    <strong>Login Failed:</strong> {error}\n                    {error.includes('Invalid credentials') && (\n                      <div className=\"mt-2 text-xs\">\n                        Make sure you're using the correct credentials:\n                        <br />• Admin: <code className=\"bg-red-100 px-1 rounded\">admin / admin123</code>\n                        <br />• Agent: <code className=\"bg-red-100 px-1 rounded\">agent1 / agent123</code>\n                        <br />• Staff: <code className=\"bg-red-100 px-1 rounded\">staff1 / staff123</code>\n                      </div>\n                    )}\n                  </AlertDescription>\n                </Alert>\n              )}\n\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading ? 'Signing In...' : 'Sign In'}\n              </Button>\n            </form>\n\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}