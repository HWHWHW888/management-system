{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/src/types/index.ts"],"sourcesContent":["export interface User {\n  id: string;\n  username: string;\n  role: 'admin' | 'agent' | 'staff' | 'boss';\n  email?: string;\n  token?: string;\n  agentId?: string;\n  staffId?: string;\n}\n\nexport interface FileAttachment {\n  id: string;\n  name: string;\n  size: number;\n  type: string;\n  data: string; // base64 encoded file data\n  uploadedAt: string;\n  uploadedBy: string;\n}\n\nexport interface Agent {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  createdAt: string;\n  status: 'active' | 'inactive';\n  isCustomer: boolean; // Agent can become a customer\n  customerId?: string; // If agent is also a customer\n  commissionRate?: number;\n  attachments?: FileAttachment[]; // Passport, photo, and other documents\n  parent_agent_id?: string; // Parent agent ID for hierarchical structure\n  parentAgent?: {\n    id: string;\n    name: string;\n    email: string;\n  }; // Parent agent details\n  children?: Agent[]; // Child agents\n}\n\nexport interface Staff {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  position: string;\n  username: string;\n  password?: string;\n  status: 'active' | 'inactive';\n  createdAt: string;\n  currentShift?: StaffShift;\n  attachments: FileAttachment[]; // Passport, photo, and other documents\n}\n\nexport interface StaffShift {\n  id: string;\n  staffId: string;\n  checkInTime: string;\n  checkOutTime?: string;\n  checkInPhoto: FileAttachment;\n  checkOutPhoto?: FileAttachment;\n  shiftDate: string;\n  status: 'checked-in' | 'checked-out';\n  notes?: string;\n}\n\nexport interface GameType {\n  id: string;\n  name: string;\n  category: 'table-games' | 'slots' | 'poker' | 'sports-betting' | 'other';\n  isActive: boolean;\n}\n\nexport interface Customer {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  agentId: string;\n  agentName: string;\n  createdAt: string;\n  totalRolling: number; // in HKD - cumulative across ALL trips\n  totalWinLoss: number; // in HKD - cumulative across ALL trips\n  totalBuyIn: number; // Total buy-in amount in HKD - cumulative across ALL trips\n  totalBuyOut: number; // Total buy-out amount in HKD - cumulative across ALL trips\n  isActive: boolean;\n  attachments: FileAttachment[];\n  creditLimit?: number; // in HKD\n  availableCredit?: number; // in HKD\n  rollingPercentage: number; // Customer's default rolling percentage\n  isAgent: boolean; // Customer can be an agent\n  sourceAgentId?: string; // If customer is also an agent, this is their agent ID\n  // Database field names (snake_case) for compatibility\n  total_rolling?: number;\n  total_win_loss?: number;\n  total_buy_in?: number;\n  total_buy_out?: number;\n  rolling_percentage?: number;\n  credit_limit?: number;\n  available_credit?: number;\n}\n\nexport interface Transaction {\n  id: string;\n  customerId: string;\n  customerName: string;\n  agentId: string;\n  agentName: string;\n  date: string;\n  rollingAmount: number; // in HKD\n  winLoss: number; // in HKD\n  gameType: string;\n  notes?: string;\n  tripId?: string;\n}\n\n// UPDATED: Rolling amount records with tripId for independent trip calculations\nexport interface RollingRecord {\n  id: string;\n  customerId: string;\n  customerName: string;\n  agentId: string;\n  agentName: string;\n  staffId: string; // Staff member who recorded this\n  staffName: string;\n  rollingAmount: number; // in HKD\n  winLoss: number; // in HKD\n  buyInAmount?: number; // Customer buy-in amount in HKD\n  buyOutAmount?: number; // Customer buy-out amount in HKD\n  gameType: string;\n  venue?: string;\n  tableNumber?: string;\n  sessionStartTime: string;\n  sessionEndTime?: string;\n  recordedAt: string;\n  notes?: string;\n  attachments: FileAttachment[]; // Receipts, photos, etc.\n  ocrData?: OCRData; // OCR extracted data\n  verified: boolean;\n  verifiedBy?: string;\n  verifiedAt?: string;\n  shiftId?: string; // Associated shift for staff tracking\n  tripId?: string; // UPDATED: Trip ID for independent trip-specific rolling calculations\n}\n\n// OCR (Optical Character Recognition) data interface\nexport interface OCRData {\n  id: string;\n  originalImageId: string; // Reference to the FileAttachment\n  extractedText: string;\n  confidence: number; // OCR confidence score (0-1)\n  extractedFields: {\n    amount?: string;\n    winLoss?: string;\n    buyIn?: string;\n    buyOut?: string;\n    date?: string;\n    time?: string;\n    venue?: string;\n    gameType?: string;\n    tableNumber?: string;\n    customerName?: string;\n    other?: { [key: string]: string };\n  };\n  processedAt: string;\n  ocrEngine: string; // e.g., 'tesseract', 'google-vision', etc.\n}\n\nexport interface TripCustomer {\n  customerId: string;\n  customerName: string;\n  rollingAmount: number; // Rolling amount in HKD (read-only, calculated from trip-specific staff records)\n  winLoss: number; // Win/Loss in HKD (read-only, calculated from trip-specific staff records)\n  buyInAmount: number; // Total buy-in amount in HKD (read-only, calculated from trip-specific staff records)\n  buyOutAmount: number; // Total buy-out amount in HKD (read-only, calculated from trip-specific staff records)\n  netCashFlow: number; // Net cash flow (buy-out - buy-in) in HKD (calculated from trip-specific data)\n  rollingPercentage: number; // Derived from customer's rolling percentage\n  calculatedRollingAmount: number; // Commission in HKD (calculated from trip-specific rolling)\n  selectedGames: string[]; // Array of game IDs selected for this trip\n  isActive: boolean; // Current active status\n  lastActivityTime: number | null; // Last activity timestamp for real-time tracking (trip-specific)\n}\n\nexport interface TripAgent {\n  id?: string; // Trip agent record ID from database\n  agentId: string;\n  agent_id?: string; // Alternative field name from backend\n  agentName: string;\n  agent: {\n    id: string;\n    name: string;\n    email: string;\n    commission_rate: number;\n  }; // Nested agent object from backend\n  sharePercentage?: number; // This agent's individual share percentage of the house final profit\n  calculatedShare?: number; // Calculated amount this agent receives\n  created_at?: string; // Creation timestamp\n}\n\nexport interface TripExpense {\n  id: string;\n  category: 'flight' | 'hotel' | 'entertainment' | 'meal' | 'other';\n  description: string;\n  amount: number; // Amount in HKD\n  date: string;\n  addedBy: string;\n  addedAt: string;\n  receipt?: FileAttachment;\n}\n\nexport interface TripSharing {\n  // Support both camelCase (fallback) and snake_case (API response) formats\n  totalWinLoss?: number; // Total customer win/loss in HKD (negative = customer loss = house win) - trip-specific\n  total_win_loss?: number; // API response format\n  totalExpenses?: number; // Total expenses in HKD\n  total_expenses?: number; // API response format\n  totalRollingCommission?: number; // Total rolling commission paid to customers in HKD - trip-specific\n  total_rolling_commission?: number; // API response format\n  totalBuyIn?: number; // Total customer buy-in amount in HKD - trip-specific\n  total_buy_in?: number; // API response format\n  totalBuyOut?: number; // Total customer buy-out amount in HKD - trip-specific\n  total_buy_out?: number; // API response format\n  netCashFlow?: number; // Net cash flow (total buy-out - total buy-in) in HKD - trip-specific\n  net_cash_flow?: number; // API response format\n  netResult?: number; // House final profit = (House Net Win - Total Expenses) where House Net Win = (House Gross Win - Rolling Commission) - trip-specific\n  net_result?: number; // API response format\n  totalAgentShare?: number; // Total amount going to all agents combined\n  total_agent_share?: number; // API response format\n  companyShare?: number; // Company's share of house final profit in HKD\n  company_share?: number; // API response format\n  agentSharePercentage?: number; // Total agent share percentage calculated from individual agents\n  agent_share_percentage?: number; // API response format\n  companySharePercentage?: number; // Company share percentage (100% - total agent percentage)\n  company_share_percentage?: number; // API response format\n  agentBreakdown?: TripAgent[]; // Individual agent shares\n  agent_breakdown?: TripAgent[]; // API response format\n  totalRolling?: number; // New field: Total rolling amount from trip_sharing table\n  total_rolling?: number; // API response format\n}\n\nexport interface Trip {\n  id: string;\n  name: string;\n  description?: string;\n  date: string;\n  budget?: number;\n  agents: TripAgent[]; // Multiple agents with individual sharing percentages\n  customers: TripCustomer[];\n  expenses: TripExpense[]; // Trip expenses\n  totalRolling: number; // Total rolling in HKD (read-only, calculated from trip-specific staff records)\n  totalWinLoss: number; // Total win/loss in HKD (read-only, calculated from trip-specific staff records)\n  totalBuyIn: number; // Total buy-in amount in HKD (read-only, calculated from trip-specific staff records)\n  totalBuyOut: number; // Total buy-out amount in HKD (read-only, calculated from trip-specific staff records)\n  calculatedTotalRolling: number; // Total commission in HKD (calculated from trip-specific rolling)\n  sharing: TripSharing; // Sharing calculation between agents and company (trip-specific)\n  status: 'active' | 'in-progress' | 'completed' | 'cancelled';\n  createdAt: string;\n  attachments: FileAttachment[];\n  // Currency fields\n  currency?: string; // Selected currency for this trip (PESO, HKD, MYR)\n  exchange_rate_peso?: number; // Exchange rate for Philippine Peso\n  exchange_rate_hkd?: number; // Exchange rate for Hong Kong Dollar\n  exchange_rate_myr?: number; // Exchange rate for Malaysian Ringgit\n  // Real-time metadata\n  lastDataUpdate?: string;\n  activeCustomersCount?: number;\n  recentActivityCount?: number;\n  totalExpenses?: number;\n  // Backend API fields (snake_case from trips.js)\n  // Note: total_win, total_loss fields consolidated into total_win_loss in trip_customer_stats\n  total_budget?: number; // From backend API\n  activecustomerscount?: number; // Updated field name from schema\n  // Legacy fields for backward compatibility\n  agentId?: string;\n  agentName?: string;\n}\n\nexport interface ChipExchange {\n  id: string;\n  customerId: string;\n  customerName: string;\n  staffId: string;\n  staffName: string;\n  amount: number; // Amount in HKD\n  exchangeType: 'cash-to-chips' | 'chips-to-cash';\n  timestamp: string;\n  proofPhoto?: FileAttachment;\n}\n\n// UPDATED: Buy-in/buy-out records with tripId for independent trip calculations\nexport interface BuyInOutRecord {\n  id: string;\n  customerId: string;\n  customerName: string;\n  staffId: string;\n  staffName: string;\n  transactionType: 'buy-in' | 'buy-out';\n  amount: number; // Amount in HKD\n  timestamp: string;\n  venue?: string;\n  tableNumber?: string;\n  notes?: string;\n  proofPhoto?: FileAttachment;\n  shiftId?: string; // Associated shift for staff tracking\n  tripId?: string; // UPDATED: Trip ID for independent trip-specific buy-in/out calculations\n}"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}