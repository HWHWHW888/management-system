{"ast":null,"code":"\"use client\";\n\n// src/portal.tsx\nimport _objectSpread from \"/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/user/Desktop/Cursor New Management System/management-system-1/Junket Management System Source Code/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"container\"];\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  var _globalThis$document;\n  const {\n      container: containerProp\n    } = props,\n    portalProps = _objectWithoutProperties(props, _excluded);\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && (globalThis === null || globalThis === void 0 || (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body);\n  return container ? ReactDOM.createPortal(/* @__PURE__ */jsx(Primitive.div, _objectSpread(_objectSpread({}, portalProps), {}, {\n    ref: forwardedRef\n  })), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport { Portal, Root };\n//# sourceMappingURL=index.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}